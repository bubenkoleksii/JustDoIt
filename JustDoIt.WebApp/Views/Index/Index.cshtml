@model IndexViewModel

@{
    var categoryMap = Model.Categories != null ? Model.Categories!.ToDictionary(c => c.Id, c => c.Name) : null;

    var jobViewModelRequest = new JobViewModelRequest
    {
        Job = new JobRequest(),
        CategoryMap = categoryMap == null
            ? null
            : categoryMap!.Select(c => new SelectListItem
            {
                Value = c.Key.ToString(),
                Text = c.Value
            })
    };

    var jobViewModelResponse = new JobViewModelResponse
    {
        IsSingleCategoryView = Model.IsSingleCategoryView,
        Jobs = Model.Jobs
    };

    var errorMessage = TempData["Error"]?.ToString();
}

<div class="text-center">
    <h1 class="display-8">
        <span class="my-title">JustDoIt</span><span> Job Manager</span>
    </h1>

    @if (!string.IsNullOrWhiteSpace(errorMessage))
    {
        <div class="alert alert-danger mt-lg-3">
            @errorMessage

            <button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <form asp-controller="Index" asp-action="Index" class="d-end" method="get">
        <button type="submit" class="btn btn-secondary">Reset all</button>
    </form>

    <div class="content-container display-2">
        <div class="content-container__job-container">
            <div class="content-container__job-container__title">
                <h2 class="my-second-title">Jobs</h2>

                @if (Model.Categories != null && Model.Categories.Any())
                {
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addJob">Add Job</button>
                }
                else
                {
                    <p class="list-item">Add a category to add a job</p>
                }
            </div>

            @await Html.PartialAsync("~/Views/PartialViews/Job/_AddJob.cshtml", jobViewModelRequest)

            @await Html.PartialAsync("~/Views/PartialViews/Job/_ListOfJobs.cshtml", jobViewModelResponse)
        </div>

        <div class="content-container__categories-container">
            <div class="content-container__categories-container__title">
                <h2 class="my-second-title">Categories</h2>
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCategory">Add Category</button>
            </div>

            @await Html.PartialAsync("~/Views/PartialViews/Category/_AddCategory.cshtml", new CategoryRequest())

            @await Html.PartialAsync("~/Views/PartialViews/Category/_ListOfCategories.cshtml", Model.Categories)
        </div>
    </div>
</div>